name: Docker Image CI

on:
  workflow_dispatch:
  push:
    branches:
    - master

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '10.19.0'

      - run: npm ci
        working-directory: ./server

      - run: echo "Tests running for server"
    if: "!contains(github.event.head_commit.message, '#skip_checks') && !contains(github.event.pull_request.title, '#skip_checks')"

  build:
    needs: tests
    strategy:
      matrix:
        repos_list: ["webchatapp-backend-ecr", "webchatapp-frontend-ecr"]
    name: Build, tag, and push app docker images
    uses: ./.github/workflows/buildapp.yaml
    with:
      webchatbot-ecr-repo: ${{ matrix.repos_list }}
    secrets: inherit

  deploy-app:
    needs: [tests, build]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Prepare compose file with up-to-date envs
      env:
        APP_TAG=${{ github.sha }}
      run: |
        echo "APP_TAG is $APP_TAG"
        envsubst < "docker-compose-aws_nobuild.tmpl" > "docker-compose.yaml"
    
    - name: Copy compose file
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.DEPLOY_HOST  }}
        username: ubuntu
        key: ${{ secrets.SSH_KEY_PROD }}
        source: "docker-compose.yaml"
        target: /app/docker-compose.yaml

    - name: Deploy app
      uses: appleboy/ssh-action@v1.1.0
      with:
        host: ${{ secrets.DEPLOY_HOST  }}
        username: ubuntu
        key: ${{ secrets.SSH_KEY_PROD }}
        script: |
          cd /app
          aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 693373126778.dkr.ecr.us-east-2.amazonaws.com
          docker compose up -d
